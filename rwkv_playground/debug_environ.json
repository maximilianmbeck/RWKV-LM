{
    "CONDA_SHLVL": "1",
    "LS_COLORS": "rs=0:di=38;5;33:ln=38;5;51:mh=00:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=01;05;37;41:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;40:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.zst=38;5;9:*.tzst=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.wim=38;5;9:*.swm=38;5;9:*.dwm=38;5;9:*.esd=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.mjpg=38;5;13:*.mjpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.m4a=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.oga=38;5;45:*.opus=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:",
    "CONDA_EXE": "/system/apps/userenv/miniconda3/bin/conda",
    "LC_MEASUREMENT": "de_DE.UTF-8",
    "SSH_CONNECTION": "140.78.90.23 59774 140.78.90.74 5792",
    "LC_PAPER": "de_DE.UTF-8",
    "LC_MONETARY": "de_DE.UTF-8",
    "MODULES_RUN_QUARANTINE": "LD_LIBRARY_PATH LD_PRELOAD",
    "LANG": "en_US.UTF-8",
    "HISTCONTROL": "ignoredups",
    "HOSTNAME": "scorpion",
    "OLDPWD": "/system/user/beck/pwbeck/projects/rwkv/RWKV-LM/RWKV-v4neo",
    "COLORTERM": "truecolor",
    "CONDA_PREFIX": "/system/apps/userenv/beck/rwkv",
    "VSCODE_GIT_ASKPASS_EXTRA_ARGS": "",
    "S_COLORS": "auto",
    "_CE_M": "",
    "which_declare": "declare -f",
    "LC_NAME": "de_DE.UTF-8",
    "XDG_SESSION_ID": "94",
    "MODULES_CMD": "/usr/share/Modules/libexec/modulecmd.tcl",
    "USER": "beck",
    "CONDA_PKGS_DIRS": "/system/apps/userenv/beck/pkgs",
    "MKL_THREADING_LAYER": "SEQUENTIAL",
    "PWD": "/system/user/beck/pwbeck/projects/rwkv/RWKV-LM/RWKV-v4neo",
    "SSH_ASKPASS": "/usr/libexec/openssh/gnome-ssh-askpass",
    "HOME": "/system/user/beck",
    "CONDA_PYTHON_EXE": "/system/apps/userenv/miniconda3/bin/python",
    "BROWSER": "/system/user/beck/.vscode-server/bin/92da9481c0904c6adfe372c12da3b7748d74bdcb/bin/helpers/browser.sh",
    "VSCODE_GIT_ASKPASS_NODE": "/system/user/beck/.vscode-server/bin/92da9481c0904c6adfe372c12da3b7748d74bdcb/node",
    "TERM_PROGRAM": "vscode",
    "SSH_CLIENT": "140.78.90.23 59774 5792",
    "TERM_PROGRAM_VERSION": "1.76.0",
    "XDG_DATA_DIRS": "/system/user/beck/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share",
    "_CE_CONDA": "",
    "VSCODE_IPC_HOOK_CLI": "/run/user/5008/vscode-ipc-65e87a5d-e13c-4576-b311-5e470d5efc09.sock",
    "LC_ADDRESS": "de_DE.UTF-8",
    "LC_NUMERIC": "de_DE.UTF-8",
    "LOADEDMODULES": "",
    "CONDA_PROMPT_MODIFIER": "(/system/apps/userenv/beck/rwkv) ",
    "MAIL": "/var/spool/mail/beck",
    "CONDA_ENVS_PATH": "/system/apps/userenv/beck",
    "VSCODE_GIT_ASKPASS_MAIN": "/system/user/beck/.vscode-server/bin/92da9481c0904c6adfe372c12da3b7748d74bdcb/extensions/git/dist/askpass-main.js",
    "TERM": "xterm-256color",
    "SHELL": "/bin/bash",
    "CUDA_DEVICE_ORDER": "PCI_BUS_ID",
    "SHLVL": "5",
    "VSCODE_GIT_IPC_HANDLE": "/run/user/5008/vscode-git-874d60b7dd.sock",
    "MANPATH": ":",
    "LC_TELEPHONE": "de_DE.UTF-8",
    "MODULEPATH": "/etc/scl/modulefiles:/etc/scl/modulefiles:/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles",
    "LOGNAME": "beck",
    "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/5008/bus",
    "GIT_ASKPASS": "/system/user/beck/.vscode-server/bin/92da9481c0904c6adfe372c12da3b7748d74bdcb/extensions/git/dist/askpass.sh",
    "XDG_RUNTIME_DIR": "/run/user/5008",
    "MODULEPATH_modshare": "/usr/share/Modules/modulefiles:2:/etc/modulefiles:2:/usr/share/modulefiles:2",
    "PATH": "/system/apps/userenv/beck/rwkv/bin:/opt/TurboVNC/bin:/system/user/beck/.vscode-server/bin/92da9481c0904c6adfe372c12da3b7748d74bdcb/bin/remote-cli:/opt/TurboVNC/bin:/system/user/beck/.cargo/bin:/system/apps/userenv/miniconda3/condabin:/opt/TurboVNC/bin:/usr/share/Modules/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/system/user/beck/bin:/system/user/beck/bin",
    "LC_IDENTIFICATION": "de_DE.UTF-8",
    "DEBUGINFOD_URLS": "https://debuginfod.centos.org/ ",
    "MODULESHOME": "/usr/share/Modules",
    "CONDA_DEFAULT_ENV": "/system/apps/userenv/beck/rwkv",
    "HISTSIZE": "1000",
    "LESSOPEN": "||/usr/bin/lesspipe.sh %s",
    "OMP_NUM_THREADS": "1",
    "LC_TIME": "de_DE.UTF-8",
    "BASH_FUNC_which%%": "() {  ( alias;\n eval ${which_declare} ) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@\n}",
    "BASH_FUNC_module%%": "() {  _module_raw \"$@\" 2>&1\n}",
    "BASH_FUNC__module_raw%%": "() {  unset _mlshdbg;\n if [ \"${MODULES_SILENT_SHELL_DEBUG:-0}\" = '1' ]; then\n case \"$-\" in \n *v*x*)\n set +vx;\n _mlshdbg='vx'\n ;;\n *v*)\n set +v;\n _mlshdbg='v'\n ;;\n *x*)\n set +x;\n _mlshdbg='x'\n ;;\n *)\n _mlshdbg=''\n ;;\n esac;\n fi;\n unset _mlre _mlIFS;\n if [ -n \"${IFS+x}\" ]; then\n _mlIFS=$IFS;\n fi;\n IFS=' ';\n for _mlv in ${MODULES_RUN_QUARANTINE:-};\n do\n if [ \"${_mlv}\" = \"${_mlv##*[!A-Za-z0-9_]}\" -a \"${_mlv}\" = \"${_mlv#[0-9]}\" ]; then\n if [ -n \"`eval 'echo ${'$_mlv'+x}'`\" ]; then\n _mlre=\"${_mlre:-}${_mlv}_modquar='`eval 'echo ${'$_mlv'}'`' \";\n fi;\n _mlrv=\"MODULES_RUNENV_${_mlv}\";\n _mlre=\"${_mlre:-}${_mlv}='`eval 'echo ${'$_mlrv':-}'`' \";\n fi;\n done;\n if [ -n \"${_mlre:-}\" ]; then\n eval `eval ${_mlre} /usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash '\"$@\"'`;\n else\n eval `/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash \"$@\"`;\n fi;\n _mlstatus=$?;\n if [ -n \"${_mlIFS+x}\" ]; then\n IFS=$_mlIFS;\n else\n unset IFS;\n fi;\n unset _mlre _mlv _mlrv _mlIFS;\n if [ -n \"${_mlshdbg:-}\" ]; then\n set -$_mlshdbg;\n fi;\n unset _mlshdbg;\n return $_mlstatus\n}",
    "BASH_FUNC_switchml%%": "() {  typeset swfound=1;\n if [ \"${MODULES_USE_COMPAT_VERSION:-0}\" = '1' ]; then\n typeset swname='main';\n if [ -e /usr/share/Modules/libexec/modulecmd.tcl ]; then\n typeset swfound=0;\n unset MODULES_USE_COMPAT_VERSION;\n fi;\n else\n typeset swname='compatibility';\n if [ -e /usr/share/Modules/libexec/modulecmd-compat ]; then\n typeset swfound=0;\n MODULES_USE_COMPAT_VERSION=1;\n export MODULES_USE_COMPAT_VERSION;\n fi;\n fi;\n if [ $swfound -eq 0 ]; then\n echo \"Switching to Modules $swname version\";\n source /usr/share/Modules/init/bash;\n else\n echo \"Cannot switch to Modules $swname version, command not found\";\n return 1;\n fi\n}",
    "BASH_FUNC_scl%%": "() {  if [ \"$1\" = \"load\" -o \"$1\" = \"unload\" ]; then\n eval \"module $@\";\n else\n /usr/bin/scl \"$@\";\n fi\n}",
    "BASH_FUNC_ml%%": "() {  module ml \"$@\"\n}",
    "_": "/usr/bin/env",
    "PYTHONIOENCODING": "UTF-8",
    "PYTHONUNBUFFERED": "1",
    "PYDEVD_USE_FRAME_EVAL": "NO",
    "PYTORCH_NVML_BASED_CUDA_CHECK": "1",
    "WANDB_SERVICE": "2-2031080-tcp-localhost-37451",
    "RWKV_T_MAX": "512",
    "RWKV_MY_TESTING": "",
    "RWKV_FLOAT_MODE": "fp16",
    "RWKV_JIT_ON": "0",
    "CUDA_MODULE_LOADING": "LAZY",
    "MASTER_ADDR": "127.0.0.1",
    "MASTER_PORT": "37213",
    "NODE_RANK": "0",
    "LOCAL_RANK": "0",
    "WORLD_SIZE": "1"
}